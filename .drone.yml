---
kind: pipeline
type: vm
name: testing

pool:
  use: ubuntu

steps:
  - name: build
    image: golang:1.18
    commands:
      - go test ./...
      - sh scripts/build.sh

---
kind: pipeline
name: linux-amd64
type: vm

pool:
  use: ubuntu

platform:
  os: linux
  arch: amd64

steps:
  - name: build-push
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      dockerfile: docker/Dockerfile.linux.amd64
      password:
        from_secret: docker_password
      repo: plugins/artifactory
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: linux-arm64
pool:
  use: ubuntu_arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: build-push
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: publish
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      dockerfile: docker/Dockerfile.linux.arm64
      password:
        from_secret: docker_password
      repo: plugins/artifactory
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
type: vm
name: windows-1809-amd64

pool:
  use: windows

platform:
  os: windows

steps:
  - name: build-push
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/windows/amd64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag
  - name: build-tag
    pull: always
    image: golang:1.18
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/windows/amd64/plugin'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag
  - name: publish
    pull: always
    image: plugins/docker@sha256:f0233d950ae87ee6cb5500b2d5497fe02aa338201c0bdce2619f443fd174cfa4
    settings:
      auto_tag: true
      auto_tag_suffix: windows-1809-amd64
      dockerfile: docker/Dockerfile.windows.amd64.1809
      password:
        from_secret: docker_password
      repo: plugins/artifactory
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

depends_on:
  - testing

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - "refs/pull/**"

---
kind: pipeline
name: notifications
type: vm

pool:
  use: ubuntu

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest
    pull: always
    image: plugins/manifest
    settings:
      ignore_missing: "true"
      auto_tag: "true"
      password:
        from_secret: docker_password
      spec: docker/manifest.tmpl
      username:
        from_secret: docker_username

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"

depends_on:
  - linux-amd64
  - linux-arm64
  - windows-1809-amd64

---
kind: pipeline
type: vm
name: release artifacts

pool:
  use: ubuntu

steps:
  - name: build
    image: golang:1.19
    commands:
      - GOOS=linux   GOARCH=amd64   go build -ldflags "-s -w -X main.version=${DRONE_TAG##v}" -a -tags netgo  -o release/plugin-linux-amd64
      - GOOS=linux   GOARCH=arm64   go build -ldflags "-s -w -X main.version=${DRONE_TAG##v}" -a -tags netgo  -o release/plugin-linux-arm64
      - GOOS=darwin  GOARCH=arm64   go build -ldflags "-s -w -X main.version=${DRONE_TAG##v}" -a -tags netgo  -o release/plugin-darwin-arm64
      - GOOS=windows GOARCH=amd64   go build -ldflags "-s -w -X main.version=${DRONE_TAG##v}" -a -tags netgo  -o release/plugin-windows-amd64

  - name: zstd-compress
    commands:
      - sudo apt-get update -y
      - sudo apt-get install -y zstd
      - zstd release/plugin-linux-amd64
      - zstd release/plugin-linux-arm64
      - zstd release/plugin-darwin-arm64
      - zstd release/plugin-windows-amd64

  - name: release
    image: plugins/github-release
    settings:
      files:
        - release/plugin-linux-amd64.zst
        - release/plugin-linux-arm64.zst
        - release/plugin-darwin-arm64.zst
        - release/plugin-windows-amd64.zst
      api_key:
        from_secret: github_token
trigger:
  event:
    - tag

depends_on:
  - notifications